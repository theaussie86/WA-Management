---
description: Coding Standards für TypeScript, React und Next.js
globs: ["**/*.ts", "**/*.tsx", "**/*.js", "**/*.jsx"]
alwaysApply: true
---

# Coding Standards

## TypeScript

- Verwende strikte TypeScript-Konfiguration
- Definiere explizite Typen für alle Props, State und Funktionen
- Nutze Interface-Definitionen für komplexe Objekte
- Vermeide `any` - verwende `unknown` oder spezifische Typen

## React/Next.js

- Verwende Server Components wo möglich für bessere Performance
- Client Components nur wenn nötig (useState, useEffect, Event Handlers)
- Nutze Next.js App Router Konventionen
- Implementiere proper Error Boundaries
- Verwende Suspense für Loading States

## Naming Conventions

### Dateien

- Komponenten: PascalCase (`UserProfile.tsx`)
- Hooks: camelCase mit `use` Prefix (`useAuth.ts`)
- Utilities: camelCase (`formatDate.ts`)
- Pages: kebab-case (`user-profile/page.tsx`)

### Variablen/Funktionen

- camelCase für Variablen und Funktionen
- PascalCase für Komponenten und Types
- UPPER_CASE für Constants
- Prefix mit `is`/`has` für Booleans
