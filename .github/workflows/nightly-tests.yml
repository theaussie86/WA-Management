name: Nightly Tests

on:
  schedule:
    # Run every night at 2 AM UTC
    - cron: "0 2 * * *"
  workflow_dispatch:

env:
  NODE_VERSION: "20"

jobs:
  # Job 1: Full Test Suite
  full-test-suite:
    name: Full Test Suite
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"

      - name: Install Dependencies
        run: npm ci

      - name: Run All Tests
        run: npm run test:ci -- --coverage --maxWorkers=4
        env:
          TEST_SUPABASE_URL: ${{ secrets.TEST_SUPABASE_URL }}
          TEST_SUPABASE_ANON_KEY: ${{ secrets.TEST_SUPABASE_ANON_KEY }}

      - name: Upload Coverage Report
        uses: codecov/codecov-action@v4
        with:
          file: ./coverage/lcov.info
          flags: nightly-tests
          name: nightly-tests-coverage

  # Job 2: Performance Benchmarks
  performance-benchmarks:
    name: Performance Benchmarks
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"

      - name: Install Dependencies
        run: npm ci

      - name: Run Performance Tests
        run: npm run test:ci -- --testPathPattern="__tests__/integration.*performance" --testTimeout=120000

      - name: Generate Performance Report
        run: |
          echo "## ðŸš€ Performance Benchmarks" > performance-report.md
          echo "" >> performance-report.md
          echo "Test execution completed at: $(date)" >> performance-report.md
          echo "" >> performance-report.md
          echo "### Test Results" >> performance-report.md
          echo "Performance tests have been executed successfully." >> performance-report.md

      - name: Upload Performance Report
        uses: actions/upload-artifact@v4
        with:
          name: performance-report
          path: performance-report.md

  # Job 3: Security Scan
  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"

      - name: Install Dependencies
        run: npm ci

      - name: Run Security Audit
        run: npm audit --audit-level=low --json > security-audit.json

      - name: Upload Security Report
        uses: actions/upload-artifact@v4
        with:
          name: security-report
          path: security-audit.json

  # Job 4: Dependency Check
  dependency-check:
    name: Dependency Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"

      - name: Install Dependencies
        run: npm ci

      - name: Check for Outdated Dependencies
        run: |
          echo "## ðŸ“¦ Dependency Check Report" > dependency-report.md
          echo "" >> dependency-report.md
          echo "### Outdated Dependencies" >> dependency-report.md
          npm outdated --json >> dependency-report.md || true
          echo "" >> dependency-report.md
          echo "### Security Vulnerabilities" >> dependency-report.md
          npm audit --audit-level=moderate >> dependency-report.md || true

      - name: Upload Dependency Report
        uses: actions/upload-artifact@v4
        with:
          name: dependency-report
          path: dependency-report.md

  # Job 5: Test Summary
  test-summary:
    name: Test Summary
    runs-on: ubuntu-latest
    needs:
      [full-test-suite, performance-benchmarks, security-scan, dependency-check]
    if: always()
    steps:
      - name: Generate Nightly Test Summary
        run: |
          echo "## ðŸŒ™ Nightly Test Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Date:** $(date)" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Test Results" >> $GITHUB_STEP_SUMMARY
          echo "| Test Suite | Status |" >> $GITHUB_STEP_SUMMARY
          echo "|------------|--------|" >> $GITHUB_STEP_SUMMARY
          echo "| Full Test Suite | ${{ needs.full-test-suite.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Performance Benchmarks | ${{ needs.performance-benchmarks.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Security Scan | ${{ needs.security-scan.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Dependency Check | ${{ needs.dependency-check.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Artifacts" >> $GITHUB_STEP_SUMMARY
          echo "- Performance Report: Available in artifacts" >> $GITHUB_STEP_SUMMARY
          echo "- Security Report: Available in artifacts" >> $GITHUB_STEP_SUMMARY
          echo "- Dependency Report: Available in artifacts" >> $GITHUB_STEP_SUMMARY

      - name: Notify Results
        uses: 8398a7/action-slack@v3
        if: always()
        with:
          status: ${{ job.status }}
          channel: "#nightly-tests"
          text: |
            ðŸŒ™ Nightly Tests Completed

            Full Test Suite: ${{ needs.full-test-suite.result }}
            Performance: ${{ needs.performance-benchmarks.result }}
            Security: ${{ needs.security-scan.result }}
            Dependencies: ${{ needs.dependency-check.result }}

            [View Details](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
